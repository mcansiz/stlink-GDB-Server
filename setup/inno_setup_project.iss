; Script generated by the Inno Script Studio Wizard.
; SEE THE DOCUMENTATION FOR DETAILS ON CREATING INNO SETUP SCRIPT FILES!

#define MyServerAppName "St-link GDB Server"
#define MyClientAppName "GDB Client"
#define MyAppVersion "1.0"
#define MyAppPublisher "- Inc."
#define MyAppURL ""
#define MyAppExeName "app.exe"

[Setup]
; NOTE: The value of AppId uniquely identifies this application.
; Do not use the same AppId value in installers for other applications.
; (To generate a new GUID, click Tools | Generate GUID inside the IDE.)
AppId={{5F7EDFFF-4554-4662-8232-06D99B2B09BC}
AppName={#MyServerAppName}
AppVersion={#MyAppVersion}
;AppVerName={#MyAppName} {#MyAppVersion}
AppPublisher={#MyAppPublisher}
AppPublisherURL={#MyAppURL}
AppSupportURL={#MyAppURL}
AppUpdatesURL={#MyAppURL}
DefaultDirName={pf}\{#MyServerAppName}
DefaultGroupName={#MyServerAppName}
OutputBaseFilename=setup
Compression=lzma
SolidCompression=yes

[Languages]
Name: "english"; MessagesFile: "compiler:Default.isl"

[Tasks]
Name: "desktopicon"; Description: "{cm:CreateDesktopIcon}"; GroupDescription: "{cm:AdditionalIcons}"; Flags: exclusive

[Files]
Source: "st-link driver.exe"; DestDir: "{app}"
Source: "..\tcpServer\debug\*"; DestDir: "{app}"; Flags: ignoreversion recursesubdirs createallsubdirs
Source: "..\tcpServer\debug\tcpserver.exe"; DestDir: "{app}"; Flags: ignoreversion; Tasks: desktopicon
Source: "..\tcpClient\debug\*"; DestDir: "{app}"; Flags: ignoreversion createallsubdirs recursesubdirs
Source: "..\tcpClient\debug\tcpClient.exe"; DestDir: "{app}"

[Icons]
Name: "{group}\{#MyServerAppName}"; Filename: "{app}\tcpserver.exe"
Name: "{commondesktop}\{#MyServerAppName}"; Filename: "{app}\tcpserver.exe"; Tasks: desktopicon
Name: "{group}\{#MyClientAppName}"; Filename: "{app}\tcpClient.exe"; Tasks: desktopicon
Name: "{commondesktop}\{#MyClientAppName}"; Filename: "{app}\tcpClient.exe"; Tasks: desktopicon

[Run]
Filename: "{app}\st-link driver.exe"

[Code]
var
mypath: string;
function NeedsAddPath(Param: string): boolean;
var
  OrigPath: string;
begin
  
  if not RegQueryStringValue(HKEY_LOCAL_MACHINE,
    'SYSTEM\CurrentControlSet\Control\Session Manager\Environment',
    'Path', OrigPath)
  then begin
    Result := True;
    exit;
  end;
  { look for the path with leading and trailing semicolon }
  { Pos() returns 0 if not found }
  Result := Pos(';' + Param + ';', ';' + OrigPath + ';') = 0;

end;

function GetPath(Param: string): string;
begin
  Result := mypath;
end;

function mimari(Param: integer): boolean;
begin

if param = 1 then
    if IsWin64 then
      begin
        // MsgBox('Your processor architecture: x64 ' , mbInformation, MB_OK);
         mypath := 'C:\Program Files (x86)\STMicroelectronics\STM32 ST-LINK Utility\ST-LINK Utility'; 
         Result := NeedsAddPath(mypath);
      end
      else
      begin
        // MsgBox('Your processor architecture: x32 ' , mbInformation, MB_OK);
         mypath := 'C:\Program Files\STMicroelectronics\STM32 ST-LINK Utility\ST-LINK Utility'; 
         Result := NeedsAddPath(mypath);        
      end;
    

if param = 2 then
    if IsWin64 then
    begin
        // MsgBox('Your processor architecture: x64 ' , mbInformation, MB_OK);
         mypath := 'C:\Program Files (x86)\GNU Arm Embedded Toolchain\9 2020-q2-update\bin'; 
         Result := NeedsAddPath(mypath);
    end
    else
    begin
        // MsgBox('Your processor architecture: x32 ' , mbInformation, MB_OK);
         mypath := 'C:\Program Files\GNU Arm Embedded Toolchain\9 2020-q2-update\bin'; 
         Result := NeedsAddPath(mypath);        
    end;


if param = 3 then
    if IsWin64 then
    begin
        // MsgBox('Your processor architecture: x64 ' , mbInformation, MB_OK);
         mypath := 'C:\Program Files (x86)\GNU ARM Eclipse\Build Tools\2.8-201611221915\bin'; 
         Result := NeedsAddPath(mypath);
    end
    else
    begin
        // MsgBox('Your processor architecture: x32 ' , mbInformation, MB_OK);
         mypath := 'C:\Program Files\GNU ARM Eclipse\Build Tools\2.8-201611221915\bin'; 
         Result := NeedsAddPath(mypath);        
    end;


if param = 4 then
    if IsWin64 then
    begin
        // MsgBox('Your processor architecture: x64 ' , mbInformation, MB_OK);
         mypath := 'C:\Program Files (x86)\Nuvoton Tools\NuLink Command Tool'; 
         Result := NeedsAddPath(mypath);
    end
    else
    begin
        // MsgBox('Your processor architecture: x32 ' , mbInformation, MB_OK);
         mypath := 'C:\Program Files\Nuvoton Tools\NuLink Command Tool'; 
         Result := NeedsAddPath(mypath);        
    end;


end;

procedure MyAfterInstall();
begin
  MsgBox('About to install MyProg.exe as ' + CurrentFileName + '.', mbInformation, MB_OK);
end;
